#!/usr/bin/env ruby

path = __FILE__
path = File.readlink(path) while File.symlink?(path)
basepath = File.expand_path(File.dirname(path) + '/..')
lib = File.join(basepath, 'lib')
$LOAD_PATH.unshift(lib) if File.directory?(lib) && !$LOAD_PATH.include?(lib)

require 'mechahue'
require 'irb'
include Mechahue

def init
  $upper_hub = Mechahue::Hub.named("hue-upper.culdesac.kobalabs.net")
  $lower_hub = Mechahue::Hub.named("hue-lower.culdesac.kobalabs.net")
  $office_hub = Mechahue::Hub.named("hue.kobalabs.net")
  $hubs = [ $upper_hub, $lower_hub, $office_hub ]
end


time = Time.now
init

my_hub = $office_hub
my_hub.activate

# my_light = my_hub.resources["1b51f4a5-76cc-4d2a-8422-ca452857da15"]

# my_light.set_on(true)
# my_light.set_color(my_light.mechacolor.rotate_hue(Math::PI/2))

# start_angle = 3*Math::PI/4
# radius = 0.01
# period = 5.0
# anchor_color = my_light.mechacolor.navigate(start_angle, radius)

# start_time = Time.now

# 80.times do |n|
#   angle = 2*Math::PI/80 * n + Math::PI
#   new_color = anchor_color.navigate(angle, radius)
#   print new_color.color_text_bg(" " * 1)
# end
# puts

# Thread.new do
#   loop do
#     elapsed = Time.now - start_time
#     angle = 2*Math::PI/period * elapsed + Math::PI
#     my_light.set_color(anchor_color.navigate(angle, radius))
#   end
# end

my_group = my_hub.resources["69932671-875c-4a02-ad28-303f9b43d34a"]
puts my_group.set_color(Mechahue::Color.from_hex("#ffa0a0").rotate_hue(1.0*Math::PI))

my_hub.watch do |update|
  puts update
end


while true ; sleep 5 ; end