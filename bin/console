#!/usr/bin/env ruby

path = __FILE__
path = File.readlink(path) while File.symlink?(path)
basepath = File.expand_path(File.dirname(path) + '/..')
lib = File.join(basepath, 'lib')
$LOAD_PATH.unshift(lib) if File.directory?(lib) && !$LOAD_PATH.include?(lib)

require 'mechahue'
require 'irb'
include Mechahue

def init
  $upper_hub = Mechahue::Hub.named("hue-upper.culdesac.kobalabs.net")
  $lower_hub = Mechahue::Hub.named("hue-lower.culdesac.kobalabs.net")
  $office_hub = Mechahue::Hub.named("hue.kobalabs.net")
  $hubs = [ $upper_hub, $lower_hub, $office_hub ]
end


time = Time.now
init

my_hub = $office_hub
my_hub.activate

# puts my_hub.resources["69932671-875c-4a02-ad28-303f9b43d34a"].lights

# my_light.set_on(true)
# my_light.set_color(my_light.mechacolor.rotate_hue(Math::PI/2))

# start_angle = 3*Math::PI/4
# radius = 0.01
# period = 5.0
# anchor_color = my_light.mechacolor.navigate(start_angle, radius)

# start_time = Time.now

# 80.times do |n|
#   angle = 2*Math::PI/80 * n + Math::PI
#   new_color = anchor_color.navigate(angle, radius)
#   print new_color.color_text_bg(" " * 1)
# end
# puts

# Thread.new do
#   loop do
#     elapsed = Time.now - start_time
#     angle = 2*Math::PI/period * elapsed + Math::PI
#     my_light.set_color(anchor_color.navigate(angle, radius))
#   end
# end

altar_button = my_hub.resources["b40fa01f-d500-43a9-a3f0-27eccd5c949a"]
puts altar_button.grouped_lights.first.lights

altar_button.watch do |event|
  puts "Altar button: #{altar_button.down? ? "down" : " up "}, #{altar_button.hold_duration.round(3)}s"
end

# $upper_hub.activate
# master_closet_switch = $upper_hub.resources["15fda4b4-738c-40c1-b24e-fb1570f159dc"]
# puts master_closet_switch.lower_right.info

while true ; sleep 5 ; end